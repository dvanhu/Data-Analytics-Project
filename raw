pip install kaggle


import os
import json
kaggle_api = {
    "username": "*****",
    "key": "*************************"
}
kaggle_dir = os.path.join(os.path.expanduser('~'), '.kaggle')
os.makedirs(kaggle_dir, exist_ok=True)
kaggle_path = os.path.join(kaggle_dir, 'kaggle.json')
with open(kaggle_path, 'w') as f:
    json.dump(kaggle_api, f)
os.chmod(kaggle_path, 600)
print(f"Kaggle API key saved to: {kaggle_path}")


import zipfile
import os
zip_path = os.path.join(os.path.expanduser('~'), '.kaggle', 'orders.csv.zip')
extract_to = os.path.join(os.getcwd(), 'retail_orders_data')
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    zip_ref.extractall(extract_to)
print(f"Dataset extracted to: {extract_to}")


import zipfile
import os
zip_path = os.path.join(os.path.expanduser('~'), '.kaggle', 'orders.csv.zip')
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    zip_ref.extractall() 
print("Extraction complete.")


pip install pandas


import pandas as pd
df = pd.read_csv('orders.csv', na_values=['Not Available', 'unknown'])
print(df['Ship Mode'].unique())


rename columns names ..make them lower case and replace space with underscore
df.rename(columns={'Order Id':'order_id', 'City':'city'})
df.columns=df.columns.str.lower()
df.columns=df.columns.str.replace(' ','_')
df.head(5)


derive new columns discount , sale price and profit
df['discount']=df['list_price']*df['discount_percent']*.01
df['sale_price']= df['list_price']-df['discount']
df['profit']=df['sale_price']-df['cost_price']
df


df['order_date']=pd.to_datetime(df['order_date'],format="%Y-%m-%d")


df.drop(columns=['list_price','cost_price','discount_percent'],inplace=True)


pip install sqlalchemy


pip install pyodbc


import pandas as pd
import sqlite3
df = pd.read_csv('orders.csv')
conn = sqlite3.connect('mydatabase.db')  
df.to_sql('orders', conn, if_exists='replace', index=False)
query = "SELECT DISTINCT [Ship Mode] FROM orders;"
result = pd.read_sql_query(query, conn)
print(result)
conn.close()


import pandas as pdimport sqlite3

df = pd.read_csv('orders.csv')
conn = sqlite3.connect('mydatabase.db')
df.to_sql('df_orders', con=conn, index=False, if_exists='append')
conn.close()


import pandas as pd
import sqlite3
df = pd.read_csv('orders.csv')
conn = sqlite3.connect('mydatabase.db') 
df.to_sql('df_orders', con=conn, index=False, if_exists='append')  
conn.close()
